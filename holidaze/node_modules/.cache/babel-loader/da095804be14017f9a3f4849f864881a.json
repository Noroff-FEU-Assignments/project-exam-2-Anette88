{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"../context/AuthContext\";\nimport { BASE_URL } from \"../constants/api\";\nconst url = BASE_URL;\nexport default function useAxios() {\n  _s();\n\n  const [auth] = useContext(AuthContext);\n  const apiClient = axios.create({\n    baseURL: url\n  });\n  apiClient.interceptors.request.use(function (config) {\n    const token = auth.token;\n    config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n    return config;\n  });\n  return apiClient;\n}\n\n_s(useAxios, \"oIlZES7aa0QuDm0FbDyM3uzVSjQ=\");","map":{"version":3,"sources":["/Users/nybruker/Documents/year2/ProjectExam2/logintest/src/hooks/useAxios.js"],"names":["useContext","axios","AuthContext","BASE_URL","url","useAxios","auth","apiClient","create","baseURL","interceptors","request","use","config","token","headers","Authorization"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,GAAG,GAAGD,QAAZ;AAEA,eAAe,SAASE,QAAT,GAAoB;AAAA;;AAClC,QAAM,CAACC,IAAD,IAASN,UAAU,CAACE,WAAD,CAAzB;AAEA,QAAMK,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC9BC,IAAAA,OAAO,EAAEL;AADqB,GAAb,CAAlB;AAIAG,EAAAA,SAAS,CAACG,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmC,UAAUC,MAAV,EAAkB;AACpD,UAAMC,KAAK,GAAGR,IAAI,CAACQ,KAAnB;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAA+BF,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA3D;AACA,WAAOD,MAAP;AACA,GAJD;AAMA,SAAON,SAAP;AACA;;GAduBF,Q","sourcesContent":["import { useContext } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"../context/AuthContext\";\nimport { BASE_URL } from \"../constants/api\";\n\nconst url = BASE_URL;\n\nexport default function useAxios() {\n const [auth] = useContext(AuthContext);\n\n const apiClient = axios.create({\n  baseURL: url,\n });\n\n apiClient.interceptors.request.use(function (config) {\n  const token = auth.token;\n  config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n  return config;\n });\n\n return apiClient;\n}"]},"metadata":{},"sourceType":"module"}