{"ast":null,"code":"var _jsxFileName = \"/Users/nybruker/Documents/year2/ProjectExam2/logintest/src/components/home/posts/MediaDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useAxios from \"../../../hooks/useAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MediaDropdown({\n  register\n}) {\n  _s();\n\n  const [media, setMedia] = useState([]);\n  const http = useAxios();\n  useEffect(function () {\n    async function getMedia() {\n      try {\n        const response = await http.get(\"wp/v2/media\");\n        console.log(\"response\", response);\n        setMedia(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getMedia();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"featured_media\",\n    ref: register,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), media.map(media => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: media.id,\n        children: media.title.rendered\n      }, media.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MediaDropdown, \"OoboxhoR4UgiapzIku39n0e7EDc=\", false, function () {\n  return [useAxios];\n});\n\n_c = MediaDropdown;\nMediaDropdown.propTypes = {\n  register: PropTypes.func\n};\nMediaDropdown.defaultProps = {\n  register: () => {}\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaDropdown\");","map":{"version":3,"sources":["/Users/nybruker/Documents/year2/ProjectExam2/logintest/src/components/home/posts/MediaDropdown.js"],"names":["React","useState","useEffect","PropTypes","useAxios","MediaDropdown","register","media","setMedia","http","getMedia","response","get","console","log","data","error","map","id","title","rendered","propTypes","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,IAAI,GAAGL,QAAQ,EAArB;AAEAF,EAAAA,SAAS,CAAC,YAAY;AACrB,mBAAeQ,QAAf,GAA0B;AACzB,UAAI;AACH,cAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAAS,aAAT,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAH,QAAAA,QAAQ,CAACG,QAAQ,CAACI,IAAV,CAAR;AACA,OAJD,CAIE,OAAOC,KAAP,EAAc;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA;AACD;;AAEDN,IAAAA,QAAQ;AAER,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACC;AAAQ,IAAA,IAAI,EAAC,gBAAb;AAA8B,IAAA,GAAG,EAAEJ,QAAnC;AAAA,4BACC;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEC,KAAK,CAACU,GAAN,CAAWV,KAAD,IAAW;AACrB,0BACC;AAAuB,QAAA,KAAK,EAAEA,KAAK,CAACW,EAApC;AAAA,kBACEX,KAAK,CAACY,KAAN,CAAYC;AADd,SAAab,KAAK,CAACW,EAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AAKA,KANA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GAhCuBb,a;UAGVD,Q;;;KAHUC,a;AAkCxBA,aAAa,CAACgB,SAAd,GAA0B;AACzBf,EAAAA,QAAQ,EAAEH,SAAS,CAACmB;AADK,CAA1B;AAIAjB,aAAa,CAACkB,YAAd,GAA6B;AAC5BjB,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADU,CAA7B","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useAxios from \"../../../hooks/useAxios\";\n\nexport default function MediaDropdown({ register }) {\n\tconst [media, setMedia] = useState([]);\n\n\tconst http = useAxios();\n\n\tuseEffect(function () {\n\t\tasync function getMedia() {\n\t\t\ttry {\n\t\t\t\tconst response = await http.get(\"wp/v2/media\");\n\t\t\t\tconsole.log(\"response\", response);\n\t\t\t\tsetMedia(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\tgetMedia();\n\t\t\n\t}, []);\n\n\treturn (\n\t\t<select name=\"featured_media\" ref={register}>\n\t\t\t<option value=\"\">Images</option>\n\t\t\t{media.map((media) => {\n\t\t\t\treturn (\n\t\t\t\t\t<option key={media.id} value={media.id}>\n\t\t\t\t\t\t{media.title.rendered}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t</select>\n\t);\n}\n\nMediaDropdown.propTypes = {\n\tregister: PropTypes.func,\n};\n\nMediaDropdown.defaultProps = {\n\tregister: () => {},\n};"]},"metadata":{},"sourceType":"module"}